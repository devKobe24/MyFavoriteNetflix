name: CI/CD Pipeline

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 워크플로우 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 최신 Ubuntu 환경에서 실행

    steps:
      - name: Checkout code # Github 저장소 코드 체크아웃
        uses: actions/checkout@v4

      - name: Set up JDK 17 # Java 17 JDK 설정
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin' # Temurin (AdoptOpenJDK) 배포 사용
          cache: 'gradle' # Gradle 캐시 활성화

      - name: Grant execute permission for gradlew # gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Build with Gradle # Gradle을 사용하여 애플리케이션 빌드 (테스트 제외)
        run: ./gradlew build -x test # -x test는 테스트를 건너뛰는 옵션입니다.

      - name: Log in to Docker Hub # Docker Hub 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # GitHub Secrets에 저장된 Docker Hub 사용자 이름
          password: ${{ secrets.DOCKER_PASSWORD }} # GotHub Secrets에 저장된 Docker Hub 비밀번호 (PAT 권장)

      - name: Build and push Docker image # Docker 이미지 빌드 및 푸시
        uses: docker/build-push-action@v5
        with:
          context: . # Dockerfile이 있는 현재 디렉토리
          push: true # Docker Hub로 이미지 푸시
          tags: ${{ secrets.DOCKER_USERNAME }}/myfavoritenetflix:latest # 이미지 태그 (사용자 이름/리포지토리:태그)
          # Dockerfile에서 EXPOSE 9007을 사용하므로, 추가적인 포트 설정은 필요없음.
